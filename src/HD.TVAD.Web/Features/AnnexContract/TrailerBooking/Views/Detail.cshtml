@using HD.TVAD.Web.Services
@using Microsoft.EntityFrameworkCore
@using HD.TVAD.ApplicationCore.Entities.Booking
@{
	Layout = null;
}
@model AnnexContractViewModel
@inject ICustomerViewService _customerViewService
@inject ISponsorProgramViewService _sponsorProgramViewService
@inject IAnnexContractViewService _annexContractViewService
@inject IDateTimeReportViewService _dateTimeReportViewService
@{
	var customerSelectItems = await _customerViewService.GetCustomerCodeAndNameListItemAsync();
	var sponorProgramSelectItems = await _sponsorProgramViewService.GetCodeAndNameSelectListItemAsync();
	var bookingTypeSelectItems = await _annexContractViewService.GetBookingTypeSelectListItemAsync();
	var sponsorTypeSelectItems = await _annexContractViewService.GetSponsorTypeSelectListItemAsync();
	var customerTypeSelectItems = await _customerViewService.GetCustomerTypeSelectListItemAsync();
//	var annexContractCodeList = await _annexContractViewService.GetCodeListAsync(Model.BookingTypeId);
	var annexContractTypeSelectItems = await _annexContractViewService.GetAnnexContractTypeListItemAsync();
	var monthSelectItems = _dateTimeReportViewService.GetMonthSelectListItem();

}

<form id="detail-form" data-bind="submit: onDetailFormSubmit" asp-area="Manager" asp-controller="AnnexContract" asp-action="EditAnnexContractAPI" method="post" enctype="multipart/form-data" class="form-horizontal">
	<input type="hidden" asp-for="BookingTypeId" value="@((int)Model.BookingTypeId)"/>
	<input type="hidden" asp-for="Id"/>
	<div class="col-md-8">
		<div class="form-group">
			<div class="col-md-2 control-label">
				<label asp-for="CustomerId"></label>
			</div>
			<div class="col-md-10">
				<select asp-for="CustomerId" class="form-control" asp-items="customerSelectItems"> </select>
				<span asp-validation-for="CustomerId" class="text-danger"></span>
			</div>
		</div>

	</div>
	<div class="col-md-4">
		<div class="form-group">
			<div class="col-md-4 control-label">
				<label asp-for="ReceiveDate"></label>
			</div>
			<div class="col-md-8">
				<input asp-for="ReceiveDate" class="form-control" type="date" />
				<span asp-validation-for="ReceiveDate" class="text-danger"></span>
			</div>
		</div>
	</div>
	<div class="col-md-4">
		<div class="form-group">
			<div class="col-md-4 control-label">
				<label asp-for="Code"></label>
			</div>
			<div class="col-md-8">
				<input asp-for="Code" class="form-control" type="text" data-bind="value: code, event: { keyup: onCodeKeyUp}" list="codeItems" />
				<datalist id="codeItems">
					<select name="codeItems"></select>
				</datalist>
				<span asp-validation-for="Code" class="text-danger"></span>
			</div>
		</div>
	</div>
	<div class="col-md-4">
		<div class="form-group">
			<div class="col-md-4 control-label">
				<label asp-for="AnnexContractTypeId"></label>
			</div>
			<div class="col-md-8">
				<select asp-for="AnnexContractTypeId" class="form-control" asp-items="annexContractTypeSelectItems">
					<option value="">@Localizer["Choose..."]</option>
				</select>				
				<span asp-validation-for="AnnexContractTypeId" class="text-danger"></span>
			</div>
		</div>

	</div>
	<div class="col-md-4">
		<div class="form-group">
			<div class="col-md-4 control-label">
				<label asp-for="SignDate"></label>
			</div>
			<div class="col-md-8">
				<input asp-for="SignDate" class="form-control" type="date" />
				<span asp-validation-for="SignDate" class="text-danger"></span>
			</div>
		</div>
	</div>
	<div class="col-md-8">
		<div class="form-group">
			<div class="col-md-2 control-label">
				<label asp-for="SponsorProgramId"></label>
			</div>
			<div class="col-md-10">
				<select asp-for="SponsorProgramId" class="form-control" asp-items="sponorProgramSelectItems"> </select>
				<span asp-validation-for="SponsorProgramId" class="text-danger"></span>
			</div>
		</div>
	</div>
	<div class="col-md-4">
		<div class="form-group">
			<div class="col-md-4 control-label">
				<label asp-for="SponsorTypeId"></label>
			</div>
			<div class="col-md-8">
				<select asp-for="SponsorTypeId" class="form-control" asp-items="sponsorTypeSelectItems">
					<option value="">@Localizer["Choose..."]</option>
				</select>
				<span asp-validation-for="SponsorTypeId" class="text-danger"></span>
			</div>
		</div>

	</div>
	<div class="col-md-4">
		<div class="form-group">
			<div class="col-md-4 control-label">
				<label asp-for="ScheduleCampaign"></label>
			</div>
			<div class="col-md-8">
				<input asp-for="ScheduleCampaign" class="form-control" type="text" />
				<span asp-validation-for="ScheduleCampaign" class="text-danger"></span>
			</div>
		</div>

	</div>
	<div class="col-md-8">
		<div class="form-group">
			<div class="col-md-2 control-label">
				<label asp-for="Content"></label>
			</div>
			<div class="col-md-10">
				<input asp-for="Content" class="form-control" type="text" />
				<span asp-validation-for="Content" class="text-danger"></span>
			</div>
		</div>
	</div>
	<div class="col-md-12 text-center">
		<button type="button" class="btn btn-primary-outline" data-bind="click: onCreateBtnClick"><span class="icon icon-plus"></span> @Localizer["Create new contract"]</button>
		<button type="button" class="btn btn-warning-outline" data-bind="click: onSaveBtnClick"><span class="icon icon-action-save"></span> @Localizer["Save change"]</button>
		<button type="button" class="btn btn-danger-outline" data-bind="click: onDeleteBtnClick"><span class="icon icon-action-delete"></span> @Localizer["Delete contract"]</button>
		<button type="button" class="btn btn-success-outline" data-bind="click: onManageBtnClick"><span class="icon icon-action-detail"></span> @Localizer["Manage bookings"]</button>
		<button type="button" class="btn btn-primary-outline" data-bind="click: onPrintContractBtnClick"><span class="icon icon-print"></span> @Localizer["Print Contract"]</button>
		<button type="button" class="btn btn-primary-outline" data-bind="click: onPrintCertificateBtnClick"><span class="icon icon-print"></span> @Localizer["Print Certificate"]</button>
	</div>

	<div id="print-contract-modal" data-bind="with: printContractOption" class="modal fade" tabindex="-1" role="dialog">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h3>@Localizer["Print Contract Options"]</h3>
				</div>
				<div class="modal-body">
					<div class="radio custom-radio custom-control">
						<label>
							<input type="radio" data-bind="checked: optionChecked" value="selected" name="print-contract-option" />
							<span class="custom-control-indicator"></span>
							@Localizer["Only selected contract"]
						</label>
					</div>
					<div class="radio custom-radio custom-control">
						<label>
							<input type="radio" data-bind="checked: optionChecked" value="selecteds" name="print-contract-option" />
							<span class="custom-control-indicator"></span>
							@Localizer["selected contracts"]
						</label>
					</div>
					<div class="radio-inline custom-radio custom-control">
						<label>
							<input type="radio" data-bind="checked: optionChecked" value="inMonth" name="print-contract-option" />
							<span class="custom-control-indicator"></span>
							@Localizer["Contracts in month"]
						</label>
					</div>
					<select class="custom-select custom-select-sm" data-bind="value: month" asp-items="monthSelectItems"></select>
					<hr />
					<div class="radio custom-radio custom-control">
						<label>
							<input type="radio" data-bind="checked: optionProgramChecked" value="all-program" name="print-contract-option-sponsor" />
							<span class="custom-control-indicator"></span>
							@Localizer["All sponsor program"]
						</label>
					</div>
					<div class="radio custom-radio custom-control">
						<label>
							<input type="radio" data-bind="checked: optionProgramChecked" value="only-program" name="print-contract-option-sponsor" />
							<span class="custom-control-indicator"></span>
							@Localizer["only sponsor program"]
						</label>
					</div>
					<select class="custom-select custom-select-sm" data-bind="value: sponsorProgramId" asp-items="sponorProgramSelectItems"></select>
				</div>
				<div class="modal-footer">
					<button type="button" data-bind="click: onOkClick" value="" class="btn btn-primary"><span class="icon icon-print"></span> @Localizer["Ok"]  </button>
					<button type="button" class="btn btn-default" data-dismiss="modal"><span class="icon icon-back"></span> @Localizer["Back"] </button>
				</div>
			</div>
		</div>
	</div>
	<div id="print-certificate-modal" data-bind="with: printCertificateOption" class="modal fade" tabindex="-1" role="dialog">
		<div class="modal-dialog" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h3>@Localizer["Print Contract Options"]</h3>
				</div>
				<div class="modal-body">
					<div class="radio custom-radio custom-control">
						<label>
							<input type="radio" data-bind="checked: optionChecked" value="selected" name="print-certificate-option" />
							<span class="custom-control-indicator"></span>
							@Localizer["Only selected contract"]
						</label>
					</div>
					<div class="radio custom-radio custom-control">
						<label>
							<input type="radio" data-bind="checked: optionChecked" value="selecteds" name="print-certificate-option" />
							<span class="custom-control-indicator"></span>
							@Localizer["selected contracts"]
						</label>
					</div>
					<div class="radio-inline custom-radio custom-control">
						<label>
							<input type="radio" data-bind="checked: optionChecked" value="inMonth" name="print-certificate-option" />
							<span class="custom-control-indicator"></span>
							@Localizer["Contracts in month"]
						</label>
					</div>
					<select class="custom-select custom-select-sm" data-bind="value: month" asp-items="monthSelectItems"></select>
					<hr />
					<div class="radio custom-radio custom-control">
						<label>
							<input type="radio" data-bind="checked: optionProgramChecked" value="all-program" name="print-contract-option-sponsor" />
							<span class="custom-control-indicator"></span>
							@Localizer["All sponsor program"]
						</label>
					</div>
					<div class="radio custom-radio custom-control">
						<label>
							<input type="radio" data-bind="checked: optionProgramChecked" value="only-program" name="print-contract-option-sponsor" />
							<span class="custom-control-indicator"></span>
							@Localizer["only sponsor program"]
						</label>
					</div>
					<select class="custom-select custom-select-sm" data-bind="value: sponsorProgramId" asp-items="sponorProgramSelectItems"></select>
				</div>
				<div class="modal-footer">
					<button type="button" data-bind="click: onOkClick" value="" class="btn btn-primary"><span class="icon icon-print"></span> @Localizer["Ok"]  </button>
					<button type="button" class="btn btn-default" data-dismiss="modal"><span class="icon icon-back"></span> @Localizer["Back"] </button>
				</div>
			</div>
		</div>
	</div>
</form>


<script>
	require(['module/manager', 'knockout'], function (manager, ko) {

		var localizer = {
			delete: "@Localizer["Delete"]",
			edit: "@Localizer["Edit"]",
			inputNotValid: "@Localizer["Input not valid"]",
		};
		var model = {
			id: '@Model.Id',
			bookingType: @((int)Model.BookingTypeId),
			code: "@Model.Code",
		};
		var form = $("#detail-form");
		var viewModel = {
			code: ko.observable(model.code),
			onCodeKeyUp: function(d, e){
				console.log("onCodeKeyUp");
				var _this = this;
				if (e.keyCode == 13) {
					_this.network.findByCode(_this.code());
					return false; // ignore default event
				}
				return false;
			},
			onCreateBtnClick: function () {
				console.log("onCreateBtnClick");
				var _this = this;
				//	$("#create-contract-form").submit();
				//	location.replace("/Manager/Booking/CreateSpotBooking");
				_this.network.createAnnexContract();
			},
			onSaveBtnClick: function () {
				console.log("onSaveBtnClick");
				if (confirm(localizer.edit)) {
					form.submit();
				}
			},
			onDeleteBtnClick: function () {
				console.log("onDeleteBtnClick");
				var _this = this;
				if (confirm(localizer.delete))
				{
					_this.network.deleteAnnexContract();
				}

			},
			onManageBtnClick: function () {
				console.log("onManageBtnClick");
				var urlPath = location.origin + "/Manager/Booking/TrailerBooking/"  + model.id;
				window.location = urlPath;

			},
			onImportBtnClick: function () {
				console.log("onImportBtnClick");

			},
			onDetailFormSubmit: function (d, e) {
				var _this = this;
				console.log("onDetailFormSubmit");
				_this.network.editAnnexContract();
			},
			printContractOption: {
				optionChecked: ko.observable("selected"),
				month: ko.observable(),
				optionProgramChecked: ko.observable('all-program'),
				sponsorProgramId: ko.observable(),
				onOkClick: function () {
					var _this = this; // printContractOption
					var option = _this.optionChecked();
					var month = _this.month();
					console.log(option);
					console.log(month);
					var urlPath = "";
					switch (option)
					{
						case "selected":
							var grid = $("#grid").data("kendoGrid");
							var rowSelect = grid.select();
							var selectedItem = grid.dataItem(rowSelect);
							urlPath = location.origin + '/Report/Report/BroadcastCertificateWithValueContract/' + selectedItem.id;
							window.open(urlPath, '_blank');
							break;
						case "selecteds":
							var itemChecked = $('input.contract[type="checkbox"]:checked');
							if (itemChecked.length > 1)
							{
								var query = "?";
								itemChecked.each(function (i, v) {
									query += '&ids=' + v.dataset.id;
								});
								urlPath = location.origin + '/Report/Report/BroadcastCertificateWithValueSomeContract' + query;
								window.open(urlPath, '_blank');
							}
							else
								alert("Select contracts please!");

							break;
						case "inMonth":
							_this.network.getAnnexContractsInMonth(month, _this);
							break;
						default:
							alert("Select option please!");
							break;
					}
					$("#print-contract-modal").modal('hide');
				},
				printContractInMonthAction(contracts) {
					if (contracts.length > 0) {
						var query = "?";
						$.each(contracts,function (i, v) {
							query += '&ids=' + v.Id;
						});
						urlPath = location.origin + '/Report/Report/BroadcastCertificateWithValueSomeContract' + query;
						window.open(urlPath, '_blank');
					}
					else
						alert("No contract!");
				},
				network: {
					getAnnexContractsInMonth: function (month, _this) {
						$.ajax({
							url: "/Manager/AnnexContract/GetAnnexContractInMonth",
							method: 'GET',
							data: {
								month: month,
								bookingType: model.bookingType
							},
							success: function (response) {
								debugger;
								console.log(response);
								if (typeof response == 'object')
								{
									var data = response;
									_this.printContractInMonthAction(data);

								}
								else {
									alert(response);
								}
							}
						});
					}
				}

			},
			onPrintContractBtnClick: function () {
				console.log("onPrintContractBtnClick");
				$("#print-contract-modal").modal('show');
			},
			printCertificateOption: {
				optionChecked: ko.observable("selected"),
				month: ko.observable(),
				optionProgramChecked: ko.observable('all-program'),
				sponsorProgramId: ko.observable(),
				onOkClick: function () {
					var _this = this; // printContractOption
					var option = _this.optionChecked();
					var month = _this.month();
					console.log(option);
					console.log(month);
					var urlPath = "";
					switch (option) {
						case "selected":
							var grid = $("#grid").data("kendoGrid");
							var rowSelect = grid.select();
							var selectedItem = grid.dataItem(rowSelect);
							urlPath = location.origin + '/Report/Report/BroadcastCertificate/' + selectedItem.id;
							window.open(urlPath, '_blank');
							break;
						case "selecteds":
							var itemChecked = $('input.contract[type="checkbox"]:checked');
							if (itemChecked.length > 1) {
								var query = "?";
								itemChecked.each(function (i, v) {
									query += '&ids=' + v.dataset.id;
								});
								urlPath = location.origin + '/Report/Report/BroadcastCertificateSomeContract' + query;
								window.open(urlPath, '_blank');
							}
							else
								alert("Select contracts please!");

							break;
						case "inMonth":
							_this.network.getAnnexContractsInMonth(month, _this);
							break;
						default:
							alert("Select option please!");
							break;
					}

					$("#print-certificate-modal").modal('hide');
				},
				printContractInMonthAction(contracts) {
					if (contracts.length > 0) {
						var query = "?";
						$.each(contracts, function (i, v) {
							query += '&ids=' + v.Id;
						});
						urlPath = location.origin + '/Report/Report/BroadcastCertificateSomeContract' + query;
						window.open(urlPath, '_blank');
					}
					else
						alert("No contract!");
				},
				network: {
					getAnnexContractsInMonth: function (month, _this) {
						$.ajax({
							url: "/Manager/AnnexContract/GetAnnexContractInMonth",
							method: 'GET',
							data: {
								month: month,
								bookingType: model.bookingType
							},
							success: function (response) {
								debugger;
								console.log(response);
								if (typeof response == 'object') {
									var data = response;
									_this.printContractInMonthAction(data);

								}
								else {
									alert(response);
								}
							}
						});
					}
				}
			},
			onPrintCertificateBtnClick: function () {
				console.log("onPrintCertificateBtnClick");
				$("#print-certificate-modal").modal('show');
			},
			network: {
				editAnnexContract: function () {
					console.log(form.serialize());
					if(form.valid())
					{
						$.ajax({
							url: form.attr('action'),
							method: form.attr('method'),
							data: form.serialize(),
							success: function (response) {
								console.log(response);
								if (typeof response == 'object') {
									if (response.Succeeded) {
										notification.show(response.Message);
										$("#detail-panel-body").animate({ opacity: 0.1 }, 0).animate({ opacity: 1 }, 200);

									}
									else {
										alert(response.Message);
									}
								}
								else {
									alert(response);
								}
							},
							error: function () {

							}
						});

					}
					else
						alert(localizer.inputNotValid);
				},
				createAnnexContract: function () {
					var createUrl = "Manager/AnnexContract/CreateAPIFromEditForm";
					if(form.valid())
					{
						$.ajax({
							url: createUrl,
							method: form.attr('method'),
							data: form.serialize(),
							success: function (response) {
								console.log(response);
								if (typeof response == 'object') {
									if (response.Succeeded) {
										notification.show(response.Message);
										var urlPath = '/AnnexContract/TrailerBooking/Detail/' + response.Id
										$('#detail-panel-body').load(urlPath, function() {											
											$("#detail-panel-body").animate({ opacity: 0.1 }, 0).animate({ opacity: 1 }, 200);
										});
										//	refreshGrid(response.Id);

									}
									else {
										alert(response.Message);
									}
								}
								else {
									alert(response);
								}
							},
							error: function () {

							}
						});
					}
					else
						alert(localizer.inputNotValid);
				},
				deleteAnnexContract: function () {
					var deleteUrl = "Manager/AnnexContract/DeleteAPI";
					console.log(form.serialize());
					$.ajax({
						url: deleteUrl,
						method: form.attr('method'),
						data: form.serialize(),
						success: function (response) {
							console.log(response);
							if (typeof response == 'object') {
								if (response.Succeeded) {
									notification.show(response.Message);
									refreshGrid();
								}
								else {
									alert(response.Message);
								}
							}
							else {
								alert(response);
							}
						},
						error: function () {

						}
					});
				},
				findByCode: function (code) {
					var url = "Manager/AnnexContract/FindByCodeAPI"
					$.ajax({
						url: url,
						method: 'GET',
						data: {
							code: code,
							bookingType: model.bookingType
							},
						success: function (response) {
							console.log(response);
							if (typeof response == 'object') {
								if (response.Succeeded) {
									notification.show(response.Message);
									//	var urlPath = location.origin + '/Manager/Booking/CreateSpotBooking/' + response.Id;
									//	window.history.pushState({}, "", urlPath);
									//	location.reload();
									//	window.location = urlPath;
									var urlPath = '/AnnexContract/TrailerBooking/Detail/' + response.Id
									$('#detail-panel-body').load(urlPath);
								}
								else {
									alert(response.Message);
								}
							}
							else {
								alert(response);
							}
						},
						error: function () {

						}
					});
				}
			}
		}
		ko.applyBindings(viewModel, $("#detail-form")[0]);
		function refreshGrid(id){
			var grid = $("#grid").data("kendoGrid");
			grid.options.settings.dataItemId = id;
			if(grid)
				grid.dataSource.read();

			grid.options.settings.dataItemId = '';
		}

	});
</script>



