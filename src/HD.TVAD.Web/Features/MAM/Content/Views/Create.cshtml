@{
    Layout = null;
    var mode = HD.Station.WebComponents.FormMode.Create;
    var profileId = _settings.Value.AppSettings.ProfileId;
}
@model ContentCreateViewModel

<form id="contentCreateForm" asp-action="UpdateMetadata" class="form-horizontal">

    @await Component.InvokeAsync("HD.Station.WebComponents.Fieldset", new { id = Guid.Empty, profileId = Guid.Parse(profileId), mode = mode, fetch = true })

    <div class="row">
        <div class="text-center" style="margin-top: 10px">
            <div class="btn-group">
                <button type="submit" class="btn btn-primary-outline"><span class="icon icon-action-edit"></span> Create </button>
                <button id="cancel-btn" type="button" class="btn btn-primary-outline"><span class="icon icon-action-cancel"></span> Cancel </button>
            </div>
        </div>
    </div>
</form>


<script>
    require(['module/manager'], function (manager) {
        manager.common.submitForm.init({
            formId: 'contentCreateForm',
            responseCallback: function (response) {
                console.log(response);
                if (typeof response == 'object') {
                    if (response.Succeeded)
                    {
                    	notification.show(response.Message);

                    	var id = response.Id;
                    	//$("#detail-partial").load("/MAM/Content/Detail/" + response.Id, function () {
                    	//	$("#detail-partial").animate({ opacity: 0.1 }, 0).animate({ opacity: 1 }, 200);
                    	//});
                    	//var grid = $(".k-grid").data('kendoGrid');
                    	//var dataSource = grid.dataSource;
                    	//dataSource.read();

                    	var grid = $(".k-grid").data('kendoGrid');
                    	if (grid) {
                    		if (id)
                    			grid.options.settings.dataItemId = id;
                    		grid.dataSource.read();
                    	}
                    }
                    else {
                        alert(response.Message);
                    }
                }
            }
        });

        $("#cancel-btn").on("click", function () {
        	$("#detail-partial").load("/MAM/Content/Detail/" + "@Model.LastAssetId", function () {
        		$("#detail-partial").animate({ opacity: 0.1 }, 0).animate({ opacity: 1 }, 200);
        	});
        });
    });
    $('select[name="RegisterId"]').on('change', function (e) {
        var optionSelected = $("option:selected", this);
        var valueSelected = this.value;
        //console.log(valueSelected);
        if (valueSelected !== "" && valueSelected !== null) {
            $.ajax({
                url: '/MAM/Content/GenerateProductCode',
                type: 'post',
                dataType: 'text',   
                data: { registerId: valueSelected },
                success: function (response, textStatus, jqXHR) {
                    $('input[name="Code"]').val(response);        

                },
                error: function (jqXHR, textStatus, errorThrown) {
                    console.log('error(s):' + textStatus, errorThrown);
                }
            });
        }
    });
</script>



