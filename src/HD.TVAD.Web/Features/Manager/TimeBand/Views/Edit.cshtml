
@{
	Layout = null;
}
@model TimeBandEditViewModel
@inject IChannelViewService _channelViewService
@inject ITimeBandViewService _timeBandViewService
@{
	var channelSelectItems = await _channelViewService.GetSelectListItemAsync();
	var timebandOfChannelSelectItems = await _timeBandViewService.GetTimeBandOfChannelListAsync(Model.ChannelId);
}

<form id="edit-timeband-form" asp-area="Manager" asp-controller="TimeBand" asp-action="Edit" method="post" enctype="multipart/form-data" class="form-horizontal">
	<div class="modal-header">
		<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
		<h4 class="modal-title">@Localizer["Edit TimeBand"]</h4>
	</div>
	<div class="modal-body">

		<h3 class="text-center text-danger"> @ViewBag.Message</h3>
				<div class="form-group">
					<div class="col-md-4 control-label">
						<label asp-for="Name"></label>
					</div>
					<div class="col-md-8">
						<input asp-for="Name" class="form-control" type="text"/>
						<span asp-validation-for="Name" class="text-danger"></span>
					</div>
				</div>
				<div class="form-group">
					<div class="col-md-4 control-label">
						<label asp-for="ChannelId"></label>
					</div>
					<div class="col-md-8">
						<select asp-for="ChannelId" class="form-control" type="text" data-bind="value: channelId, event: {change: onChannelSelectChange}" asp-items="channelSelectItems">
							<option>@Localizer["Choose..."]</option>
						</select>
						<span asp-validation-for="ChannelId" class="text-danger"></span>
					</div>
				</div>
				<div class="form-group">
					<div class="col-md-4 control-label">
						<label asp-for="ParentId"></label>
					</div>
					<div class="col-md-8">
						<select asp-for="ParentId" class="form-control" type="text" data-bind="enable: enableTimeBandSelect,
														value: timeBandId,
														options: timebandOptions,
																	optionsText: 'name',
																	optionsValue: 'id',
																	optionsCaption: '@Localizer["None"]'" asp-items="timebandOfChannelSelectItems"></select>
						<span asp-validation-for="ParentId" class="text-danger"></span>
					</div>
				</div>
				<div class="form-group">
					<div class="col-md-4 control-label">
						<label asp-for="Description"></label>
					</div>
					<div class="col-md-8">
						<textarea class="form-control" type="text" asp-for="Description"></textarea>
						<span asp-validation-for="Description" class="text-danger"></span>
					</div>
				</div>
		<div class="modal-footer">
			<div class="text-center">
				<button id="submit" type="submit" value="" class="btn btn-primary" onclick=""><span class="icon icon-plus"></span> @Localizer["Save"] </button>
				<button type="button" class="btn btn-primary" data-dismiss="modal"><span class="icon icon-back"></span> @Localizer["Back"]</button>
			</div>
		</div>

	</div>
</form>


<script>
    require(['module/manager'], function (manager) {
        manager.common.submitForm.init({
        	formId: 'edit-timeband-form',
        	responseCallback: function (response) {
        		console.log(response);
        		if (typeof response == 'object') {
        			if (response.result == "OK") {
        				$("#modal").modal("hide");
        				notification.show(response.message);

        				var grid = $("#grid-time-band").data('kendoTreeList');
        				if (grid) {
        					if (response.id != "00000000-0000-0000-0000-000000000000")
        						grid.options.settings.dataItemId = response.id;
        					else
        						if (response.data)
        							grid.options.settings.dataItemId = response.data.Id;

        					grid.dataSource.read();
        				}
        			}
        			else {
        				alert(response.message);
        			}
        		}
        		else {
        			alert(response);
        		}
        	}
        });
    });
    require(["jquery", "knockout"], function ($, ko) {
    	var timebandOfChannelSelectItems = @Json.Serialize(timebandOfChannelSelectItems);
    	var options = [];
    	var timebandOption = function (id, name) {
    		this.name = name;
    		this.id = id;
    	};
    	timebandOfChannelSelectItems.forEach(function(v,i){
    		options.push(new timebandOption(v.Value, v.Text));
    	});
    	console.log("options",options);
    	var createTimeBandViewModel = {
    		channelId: ko.observable(),
    		timeBandId: ko.observable("@Model.ParentId"),
    		timebandOptions: ko.observableArray(options),
    		enableTimeBandSelect: ko.observable(true),
    		onChannelSelectChange: function (data, event) {
    			var _this = this;
    			if (_this.channelId()) {
    				_this.enableTimeBandSelect(true);
    				_this.timebandOptions([]);
    				$.ajax({
    					url: "Manager/TimeBand/GetAllTimeBandbyChannelId",
    					type: 'GET',
    					data: { channelId: _this.channelId() },
    					success: function (response) {
    						console.log(response);
    						var data = response;
    						$.each(data, function (i, v) {
    							_this.timebandOptions.push(
									new timebandOption(v.Id, v.Name));
    						});
    					}
    				});
    			}
    			else {
    				_this.enableTimeBandSelect(false);
    				_this.timebandOptions([]);
    			}
    		}
    	};

    	ko.applyBindings(createTimeBandViewModel, $("#edit-timeband-form")[0]);

    });
</script>