@{
	ViewBag.Title = Localizer["Rate card"].Value;
	Layout = "_Manager_Layout";
}
@inject ITimeBandService _timeBandService
@inject ITimeBandViewService _timeBandViewService
@inject IChannelService _channelService
@{
	var timeBandSelectItems = await _timeBandService.GetAll()
		.OrderBy(t => t.TimeBandBase.Name)
		.Select(a => new SelectListItem()
		{
			Value = a.Id.ToString(),
			Text = a.TimeBandBase.Name
		}).ToListAsync();
	var channelSelectItems = await _channelService.GetAll().Select(a => new SelectListItem()
	{
		Text = a.TimeBandBase.Name
	}).ToListAsync();

	var timeBandNameSelectItems = await _timeBandViewService.GetNameListAsync();
}
<div class="panel panel-flex panel-default">
	<div class="panel-heading">
		<div class="dashhead">
			<div class="dashhead-titles">
				<div class="dashhead-title">
					<h2> @Localizer["Rate card"] </h2>
				</div>
			</div>
			<div class="dashhead-toolbar btn-toolbar">
				<button id="btn-create" class="btn btn-primary-outline create"> <span class="icon icon-plus"></span> @Localizer["Add"] </button>
			</div>
		</div>
		<div class="flextable table-actions">
			<div class="flextable-item flextable-primary">
				<div class="btn-toolbar-item input-with-icon" style="width: 70%; max-width: 600px;">
					<span class="icon icon-search"></span>
					<input type="search" id="filterText" data-bind="value: filterText, event: {keyup: onFilterTextKeyUp,blur: onFilterTextBlur}" list="items" class="form-control input-block" placeholder="@Localizer["Search..."]">
					<datalist id="items">
						<select name="items" asp-items="timeBandNameSelectItems"></select>
					</datalist>
				</div>
				<div class="btn-toolbar-item input-with-icon">
					<button id="search-btn" data-bind="click: onSearchBtnClick" class="btn btn-primary-outline"><span class="icon icon-search"></span></button>
				</div>
				<div class="btn-toolbar-item input-with-icon">
					<button id="clearFilter" data-bind="click: onClearFilterClick" class="btn btn-primary-outline"><span class="icon icon-erase"></span></button>
				</div>
			</div>
			<div class="flextable-item">
				<div class="checkbox custom-control custom-checkbox">
					<label>
						<input id="filterDisabled" type="checkbox" class="form-control">
						<span class="custom-control-indicator"></span>
						@Localizer["Include Disabled"]
					</label>
				</div>
			</div>
		</div>
	</div>
	<div class="panel-body">
		<div id="grid"></div>
	</div>
</div>


<div id="modal" class="modal fade" tabindex="-1" role="dialog">
	<div class="modal-dialog" role="document">
		<div class="modal-content">

		</div>
	</div>
</div>

<script id="edit-template" type="text/x-kendo-template">
	<div class="btn-group">
		<button data-id="#: id #" class="btn btn-danger-outline btn-sm delete"><span class="icon icon-action-delete"></span> @Localizer["Delete"]</button>
		<button data-id="#: id #" class="btn btn-warning-outline btn-sm edit"><span class="icon icon-action-edit"></span> @Localizer["Edit"]</button>
	</div>
</script>

<script>
	require(['module/timeband-price', 'knockout'], function (module, ko) {
		module.init({
			url: {
				getAll: "GetAll",
				controller: "TimeBandPrice"
			},
			group: [
			    { field: 'timeBandName', order: 'desc' },
			],
			model: {
				id: 'Id',
				fields: {
					startDate: { field: "StartDate", type: "date" },
					timeBandName: { field: "TimeBandName", type: "text" },
					spotBlockDuration: { field: "SpotBlockDuration", type: "number" },
					price: { field: "Price", type: "number" },
				},
			},
			DOMid: {
				grid: 'grid',
				editTemplate: 'edit-template'
			},
			columns: [
				{ field: 'timeBandName', title: "@Localizer["TimeBand"]" },
				{ field: 'spotBlockDuration', title: "@Localizer["Duration"]" },
				{
					field: 'startDate', title: "@Localizer["Start Date"]",
					template: function (dataItem) {
						return kendo.template($("#date-template").html())({ date: dataItem.startDate });
					},
					groupHeaderTemplate: function (dataItem) {
						return kendo.template($('#date-template').html())({ date: dataItem.value });
					},
				},
				{
					field: 'price', title: "@Localizer["Price"]",
					template: function (dataItem) {
						return kendo.template($("#money-template").html())({ value: dataItem.price });
					},
				},
				{
					field: 'Edit',
					title: "@Localizer["Edit"]",
					template: kendo.template($("#edit-template").html())
				}
			],
			settings: {
				groupable: true,
			},
			filter: function (filterText) {
				var grid = $("#grid").data("kendoGrid");
				var dataSource = grid.dataSource;
				var filter = {};
				if (filterText != '')
				{
					var duration = 0;
					if (parseInt(filterText)) {
						duration = parseInt(filterText);
					};
					filter = {
						logic: "or",
						filters: [
						{ field: "timeBandName", operator: "eq", value: filterText },
						{ field: "spotBlockDuration", operator: "eq", value: duration },
					//	{ field: "description", operator: "contains", value: filterText }
						]
					}
				}
				dataSource.filter(filter);
			},
		});

		var viewModel = {
			timeBandId: ko.observable(""),
			onFilterTextKeyUp: function (d, e) {
				var _this = this;
				if (e.keyCode == 13) {
					_this.onChange(_this.timeBandId());
					return false; // ignore default event
				}
				return false;
			},
			onFilterTextBlur: function (d, e) {
				var _this = this;
			//	_this.onChange(_this.timeBandId());
				return false; // ignore default event
			},
			onClearFilterClick: function (d, e) {
				var _this = this;
				_this.timeBandId("");
				_this.onChange(_this.timeBandId());
			},
			onFilterTextChange: function (d, e) {
				var _this = this;
				_this.onChange(_this.timeBandId());
			},
			onChange: function (timeBandId) {
				search(timeBandId);
				$('button.create').attr("data-link", "Manager/TimeBandPrice/Create/" + timeBandId);
			},
		};

	//	ko.applyBindings(viewModel);
	});

	function search(timeBandId) {
		var grid = $("#grid").data("kendoGrid");
		var dataSource = grid.dataSource;
		//dataSource.read({
		//	timeBandId: timeBandId,
		//});
	}
</script>