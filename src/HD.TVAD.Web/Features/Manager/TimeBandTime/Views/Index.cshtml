@{
	Layout = null;
}
@model TimeBandSliceIndexViewModel


<div class="container-vertical-flex">
	<div class="flex flex-0">
		<span class="h4">@Localizer["TimeBand"]: @Model.TimeBandName</span>
		<button class="btn btn-sm btn-primary-outline create timeBandTime pull-right"> <span class="glyphicon glyphicon-plus"></span> @Localizer["Add"] </button>
	</div>
	<div class="flex flex-1">
		<div id="grid-timeBandTime"></div>
	</div>
</div>

<script id="timeBandTime-edit-template" type="text/x-kendo-template">
	<div class="btn-group">
		<button data-id="#: id #" class="btn btn-danger-outline btn-sm delete timeBandTime"> @Localizer["Delete"]</button>
		<button data-id="#: id #" class="btn btn-warning-outline btn-sm edit timeBandTime"> @Localizer["Edit"]</button>
	</div>
</script>

<script id="startTime-template" type="text/x-kendo-template">
	#: kendo.toString(kendo.parseDate(time), "hh:mm tt")  #
</script>

<script id="endTime-template" type="text/x-kendo-template">
	<div class="endTime" data-tooltip="#=dayOffset#">
		#: kendo.toString(kendo.parseDate(time), "hh:mm tt")  #
	</div>
</script>

<script>
	require(['module/timeband-time'], function (module) {
		module.init({
			url: {
				controller: "TimeBandTime",
				getAll: "GetAllTimeBandTimeByTimeBandId",
				id: "@Model.TimeBandId",
			},
			DOMid: {
				grid: 'grid-timeBandTime',
			},
			DOMclass: {
				entity: ".timeBandTime",
			},
			model: {
				id: 'Id',
				fields: {
					startDate: { field: "StartDate", type: "date" },
					endDate: { field: "EndDate", type: "date" },
					startTimeOfDay: { field: "StartTimeOfDay", type: "date" },
					duration: { field: "Duration", type: "number" },
				},
			},
			data: {
				timeBandId: "@Model.TimeBandId"
			},
			columns: [
				{
					field: "startTimeOfDay", title: "@Localizer["Start time"]",
					template: function (dataItem) {
						return kendo.template($("#startTime-template").html())({ time: dataItem.startTimeOfDay });
					},
					width: "100px",
				},
				{
					field: "duration",
					title: "@Localizer["End time"]",
					template: function (dataItem) {
						var startTime = dataItem.startTimeOfDay;
						var timeFrom0h = (startTime.getHours() * 60 * 60 + startTime.getUTCMinutes() * 60) * 1000;
						var timeLeftFrom24h = 24 * 60 * 60 * 1000 - timeFrom0h;
						var dayOffset = Math.floor((dataItem.duration * 1000 - timeLeftFrom24h) / (24 * 60 * 60 * 1000));
						if ((dataItem.duration * 1000 - timeLeftFrom24h) > 0) {
							//	dayOffset = 1;
						}
						var endTimeMilisecond = startTime.getTime() + dataItem.duration * 1000;
						var endTime = new Date(endTimeMilisecond);
						//	debugger;
						dayOffsetAddADay = dayOffset + 1; // nextday
						if (dayOffsetAddADay == 1) dayOffsetAddADay = " "; // clear 1 day
						var dayOffsetString = "";
						if (dayOffset >= 0)
							dayOffsetString = "@Localizer["Next "]" + dayOffsetAddADay + "@Localizer[" day"]";
						if (dayOffset < 0)
							dayOffsetString = "@Localizer["In day"]";
						return kendo.template($("#endTime-template").html())({ time: endTime, dayOffset: dayOffsetString });
					},
					width: "100px",
				},
				{
					field: "startDate",
					title: "@Localizer["Start Date"]",
					template: function (dataItem) {
						return kendo.template($("#date-template").html())({ date: dataItem.startDate });
					}
				},
				{
					field: "endDate",
					title: "@Localizer["End Date"]",
					template: function (dataItem) {
						return kendo.template($("#date-template").html())({ date: dataItem.endDate });
					}
				},
				{
					field: "",
					title: "@Localizer["Edit"]",
					template: kendo.template($("#timeBandTime-edit-template").html()),
					width: "200px",
				}

			]
		});
	});

</script>