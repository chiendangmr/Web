@{
	ViewBag.Title = Localizer["Retail spots manager"].Value;
}
@inject IRetailContractViewService _retailContractViewService
@inject IRetailCustomerViewService _retailCustomerViewService
@{
	var retailCustomerSelectItems = await _retailCustomerViewService.GetNameListAsync();
	var retailContractSelectItems = await _retailContractViewService.GetCodeListAsync();
}
<div class="container-vertical-flex">
	<div class="flex flex-3">
		<div class="container-flex">
			<div class="flex flex-3">
				<div class="panel panel-flex panel-default">
					<div class="panel-heading">
						<div class="dashhead">
							<div class="dashhead-titles">
								<div class="dashhead-title">
									<h4>@Localizer["Retail contract"]</h4>
								</div>
							</div>
							<div class="dashhead-toolbar btn-toolbar">
								@*<button id="btn-add" class="btn btn-sm btn-primary-outline create retailContract"> <span class="icon icon-plus"></span> @Localizer["Add contract"] </button>*@
							</div>
						</div>
						<div class="flextable table-actions">
							<div class="flextable-item flextable-primary">
								<div class="btn-toolbar-item input-with-icon" style="width: 70%; max-width: 600px;">
									<span class="icon icon-search"></span>
									<input type="search" id="filterText" data-bind="value: filterText,
													event: {keyup: onFilterTextKeyUp,blur: onFilterTextBlur}" list="items" class="form-control input-block " placeholder="@Localizer["Search..."]">
									<datalist id="items">
										<select name="annexContracts" asp-items="retailContractSelectItems"></select>
										<select name="customers" asp-items="retailCustomerSelectItems"></select>
									</datalist>
								</div>
								<div class="btn-toolbar-item input-with-icon">
									<button id="clearFilter" data-bind="click: onClearFilterClick" class="btn btn-primary-outline"><span class="icon icon-erase"></span></button>
								</div>
							</div>
							<div class="flextable-item">
								<button class="btn btn-primary-outline disabled"><span class="icon icon-print"></span> @Localizer["Print"]</button>	
							</div>
						</div>
					</div>
					<div class="panel-body">
						<div id="retail-contract-grid"></div>
					</div>
				</div>
			</div>
			<div class="flex flex-2">
				<div class="panel panel-flex" id="div-annexDetail"></div>
			</div>
		</div>
	</div>
	<div class="flex flex-5">
		<div class="container-flex"  id="div-spotBooking">
		</div>
	</div>
</div>


<div id="modal" class="modal fade" tabindex="-1" role="dialog">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
		</div>
	</div>
</div>
<script id="edit-template" type="text/x-kendo-template">
	<div class="btn-group">
		<button data-id="#: id #" class="btn btn-danger-outline btn-sm delete retailContract"><span class="icon icon-action-delete"></span></button>
		<button data-id="#: id #" class="btn btn-warning-outline btn-sm edit retailContract"><span class="icon icon-action-edit"></span></button>
		<a href="Manager/SpotBooking/IndexContract/#=id#" target="_blank" data-id="#: id #" class="btn btn-success-outline btn-sm bookings"><span class="icon icon-book"></span>@Localizer["Detail"]</a>
		<a href="Report/Report/BroadcastCertificate/#=id#" target="_blank" data-id="#: id #" class="btn btn-success-outline btn-sm bookings"><span class="icon icon-print"></span></a>
	</div>
</script>

<script id="SignDate-template" type="text/x-kendo-template">
	#: kendo.toString(kendo.parseDate(SignDate), "dd/MM/yyyy")  #
</script>
<script id="ReceiveDate-template" type="text/x-kendo-template">
	#: kendo.toString(kendo.parseDate(ReceiveDate), "dd/MM/yyyy")  #
</script>
<script>
	require(['module/retail-spot-booking'], function (module) {
		module.init({
			url: {
				controller: "RetailContract",
				getAll: "GetAll",
			},
			DOMclass: {
				entity: '.retailContract',
			},
			DOMid: {
				grid: 'retail-contract-grid',
			},
			model: {
				id: "Id",
				fields: {
					receiveDate: { field: "ReceiveDate", type: "date" },
					code: { field: "Code", type: "text" },
					customerName: { field: "CustomerName", type: "text" },
				}
			},
			columns: [
				{ field: 'code', title: "@Localizer["Code"]", width: "100px" },
				{ field: 'customerName', title: "@Localizer["Customer Name"]" },
				//{ field: 'bookingTypeName' },
				{
					field: 'receiveDate', title: "@Localizer["Receive Date"]",
					template: function (dataItem) {
						return kendo.template($("#date-template").html())({ date: dataItem.receiveDate });
					}
				},
				{
					field: "",
					title: "@Localizer["edit"]",
					template: kendo.template($("#edit-template").html()),
					width: "200px",
		}
			],
			function: {
				onChange: function (arg) {

					var grid = arg.sender;
					var selected = grid.dataItem(this.select());
					//	$("#div-annexDetail").load("Manager/AnnexContractAsset" + "/Index/" + selected.id);
					$("#div-spotBooking").load("Manager/SpotBooking" + "/IndexBooking/" + selected.id);
				}
			},
			filter: function (filterText) {
				var grid = $("#retail-contract-grid").data("kendoGrid");
				var dataSource = grid.dataSource;
				dataSource.filter({
					logic: "or",
					filters: [
					{ field: "code", operator: "contains", value: filterText },
					{ field: "customerName", operator: "contains", value: filterText },
					]
				});
			}
		});
	});

</script>