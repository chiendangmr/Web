@{
	ViewBag.Title = Localizer["Block"].Value;
	Layout = "_Manager_Layout";
}
@functions{
	async Task<bool> CheckPermissionAsync(UserPermissions permission)
	{
		//	return await AuthorizationService.AuthorizeAsync(User, null, new PermissionRequirement(permission));
		return true;
	}
}
@{
	var canCreate = await CheckPermissionAsync(UserPermissions.Manager_SpotBlock_Create);
	var canEdit = await CheckPermissionAsync(UserPermissions.Manager_SpotBlock_Edit);
	var canDelete = await CheckPermissionAsync(UserPermissions.Manager_SpotBlock_Delete);

	var notHavePessmission = Localizer["Not have permission"].Value;
	var disabledClass = "disabled";
	var normalClass = "";
	var normalLabel = "";
	var IsCreatedClass = canCreate ? normalClass : disabledClass;
	var labelBtnCreate = canCreate ? normalLabel : notHavePessmission;
	var IsEditedClass = canEdit ? normalClass : disabledClass;
	var labelBtnEdit = canEdit ? normalLabel : notHavePessmission;
	var IsDeletedClass = canDelete ? normalClass : disabledClass;
	var labelBtnDelete = canDelete ? normalLabel : notHavePessmission;
}

@inject ISpotBlockViewService _spotBlockService
@{
	var durationList = _spotBlockService.GetDurationList();
}
<div class="panel panel-flex panel-default">
	<div class="panel-heading">
		<div class="dashhead">
			<div class="dashhead-titles">
				<div class="dashhead-title">
					<h2>@ViewBag.Title</h2>
				</div>
			</div>
			<div class="dashhead-toolbar btn-toolbar">
				<button class="btn btn-primary-outline create @IsCreatedClass" title="@labelBtnCreate" aria-label="@labelBtnCreate"> <span class="icon icon-plus"></span> @Localizer["Create"]  </button>
			</div>
		</div>
		<div class="flextable table-actions">
			<div class="flextable-item flextable-primary">
				<div class="btn-toolbar-item input-with-icon" style="width: 70%; max-width: 600px;">
					<span class="icon icon-search"></span>
					<input type="search" id="filterText" data-bind="value: filterText, event: {keyup: onFilterTextKeyUp,blur: onFilterTextBlur}" list="spotBlocks" class="form-control input-block" placeholder="@Localizer["Search..."]">
					<datalist id="spotBlocks">
						<select name="spotBlocks" asp-items="durationList"></select>
					</datalist>
				</div>
				<div class="btn-toolbar-item input-with-icon">
					<button id="search-btn" data-bind="click: onSearchBtnClick" class="btn btn-primary-outline"><span class="icon icon-search"></span></button>
				</div>
				<div class="btn-toolbar-item input-with-icon">
					<button id="clearFilter" data-bind="click: onClearFilterClick" class="btn btn-primary-outline"><span class="icon icon-erase"></span></button>
				</div>
			</div>
			<div class="flextable-item">
				<div class="checkbox custom-control custom-checkbox">
					<label>
						<input id="filterDisabled" type="checkbox" class="form-control">
						<span class="custom-control-indicator"></span>
						@Localizer["Include Disabled"]
					</label>
				</div>
			</div>
		</div>
	</div>
	<div class="panel-body">
		<div id="grid"></div>
	</div>
</div>


<div id="modal" class="modal fade" tabindex="-1" role="dialog">
	<div class="modal-dialog" role="document">
		<div class="modal-content">

		</div>
	</div>
</div>

<script id="edit-template" type="text/x-kendo-template">
	@*<div class="btn-group">
			<button type="button" class="btn btn-sm btn-warning-outline dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
				 <span class="icon icon-action-edit"> </span> Action
			</button>
			<div class="dropdown-menu">
				<button data-id="#: id #" class="btn btn-danger-outline btn-sm delete"> <span class="icon icon-action-delete"></span> @Localizer["Delete"]</button>
				<div class="dropdown-divider"></div>
				<button data-id="#: id #" class="btn btn-warning-outline btn-sm edit"><span class="icon icon-action-edit"></span> @Localizer["Edit"]</button>
				<div class="dropdown-divider"></div>
			</div>
		</div>*@
	<div class="btn-group">
		<button data-id="#: id #" class="btn btn-danger-outline btn-sm delete @IsDeletedClass" title="@labelBtnEdit" aria-label="@labelBtnEdit"> <span class="icon icon-action-delete"></span> @Localizer["Delete"]</button>
		<button data-id="#: id #" class="btn btn-warning-outline btn-sm edit @IsEditedClass" title="@labelBtnDelete" aria-label="@labelBtnDelete"><span class="icon icon-action-edit"></span> @Localizer["Edit"]</button>
	</div>
</script>

<ul id="context-menu">
	<li data-action="delete">
		<span class="icon icon-action-delete"></span> @Localizer["Delete"]
	</li>
	<li data-action="edit">
		<span class="icon icon-action-edit"></span> @Localizer["Edit"]
	</li>
</ul>

<script>

	require(['module/spot-block', 'knockout'], function (module, ko) {

	//	window._enableBlockUI = false; // test

		module.init({
			url: {
				controller: "SpotBlock",
				getAll: "GetAllBlock",
			},
			model: {
				id: 'Id',
				fields: {
					length: { field: "Length", type: "number" },
					description: { field: "Description", type: "text" },
				}

			},
			columns: [
		   //     { selectable: true, width: "50px" },
			{ field: "length", title: "@Localizer["length"]" },
				{ field: "description", title: "@Localizer["description"]" },
				{
					field: "",
					title: "@Localizer["edit"]",
					template: kendo.template($("#edit-template").html()),
					width: "160px",
				}

			],
			function: {
				detailInit: function (e) {
					e.detailCell.load("Manager/SpotBlock/Detail/" + e.data.id);
				}
			},
			filter: function (filterText) {
				var grid = $("#grid").data("kendoGrid");
				var dataSource = grid.dataSource;
				var duration = 0;
				if (parseInt(filterText)) {
					duration = parseInt(filterText);
				}
				dataSource.filter({
					logic: "or",
					filters: [
					{ field: "duration", operator: "eq", value: duration },
					{ field: "description", operator: "contains", value: filterText }
					]
				});
			},
			settings: {
				selectFirstRow: true,
			}
		});

	});

</script>

<style>
	.k-link {
		color: #2d2d2d
	}

	.k-grid table > thead > tr > th, .k-grid table > tbody > tr > th, .k-grid table > tfoot > tr > th, .k-grid table > thead > tr > td, .k-grid table > tbody > tr > td, .k-grid table > tfoot > tr > td {
		overflow: visible;
	}

	.dropdown-menu {
		position: absolute;
		top: 100%;
		left: 0;
		z-index: 1000;
		display: none;
		float: left;
		min-width: unset;
		padding: 5px 0;
		margin: 2px 0 0;
		list-style: none;
		font-size: 14px;
		text-align: left;
		background-color: rgb(128, 128, 128);
		border: 1px solid #ccc;
		border: 1px solid rgba(0,0,0,.15);
		border-radius: 4px;
		box-shadow: 0 6px 12px rgba(0,0,0,.175);
		background-clip: padding-box;
	}
</style>