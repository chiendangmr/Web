//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HDAutomationService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayingInfo", Namespace="http://schemas.datacontract.org/2004/07/HDAutomationLib")]
    public partial class PlayingInfo : object
    {
        
        private HDAutomationService.TimeCode BackgroundPlayingTimeCodeField;
        
        private long IdClipField;
        
        private int ListIdField;
        
        private long NextItemIdField;
        
        private int NextSourceSignalPortField;
        
        private int NextSourceSignalTypeField;
        
        private long OldPlayingItemIdField;
        
        private HDAutomationService.TimeCode OldPlayingTimeCodeField;
        
        private HDAutomationService.SystemState OldStateField;
        
        private long OldValuePickTickField;
        
        private HDAutomationService.TimeCode PlayTcInField;
        
        private HDAutomationService.TimeCode PlayTcOutField;
        
        private long PlayingItemIdField;
        
        private HDAutomationService.TimeCode PlayingTimeCodeField;
        
        private System.DateTime RunningPlaylistDateField;
        
        private int SourceSignalTypeField;
        
        private long StartEventTimeTickField;
        
        private HDAutomationService.SystemState StateField;
        
        private string TapeIdField;
        
        private long ValuePickTickField;
        
        private System.DateTime VersionValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HDAutomationService.TimeCode BackgroundPlayingTimeCode
        {
            get
            {
                return this.BackgroundPlayingTimeCodeField;
            }
            set
            {
                this.BackgroundPlayingTimeCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long IdClip
        {
            get
            {
                return this.IdClipField;
            }
            set
            {
                this.IdClipField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ListId
        {
            get
            {
                return this.ListIdField;
            }
            set
            {
                this.ListIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long NextItemId
        {
            get
            {
                return this.NextItemIdField;
            }
            set
            {
                this.NextItemIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NextSourceSignalPort
        {
            get
            {
                return this.NextSourceSignalPortField;
            }
            set
            {
                this.NextSourceSignalPortField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NextSourceSignalType
        {
            get
            {
                return this.NextSourceSignalTypeField;
            }
            set
            {
                this.NextSourceSignalTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OldPlayingItemId
        {
            get
            {
                return this.OldPlayingItemIdField;
            }
            set
            {
                this.OldPlayingItemIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HDAutomationService.TimeCode OldPlayingTimeCode
        {
            get
            {
                return this.OldPlayingTimeCodeField;
            }
            set
            {
                this.OldPlayingTimeCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HDAutomationService.SystemState OldState
        {
            get
            {
                return this.OldStateField;
            }
            set
            {
                this.OldStateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OldValuePickTick
        {
            get
            {
                return this.OldValuePickTickField;
            }
            set
            {
                this.OldValuePickTickField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HDAutomationService.TimeCode PlayTcIn
        {
            get
            {
                return this.PlayTcInField;
            }
            set
            {
                this.PlayTcInField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HDAutomationService.TimeCode PlayTcOut
        {
            get
            {
                return this.PlayTcOutField;
            }
            set
            {
                this.PlayTcOutField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PlayingItemId
        {
            get
            {
                return this.PlayingItemIdField;
            }
            set
            {
                this.PlayingItemIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HDAutomationService.TimeCode PlayingTimeCode
        {
            get
            {
                return this.PlayingTimeCodeField;
            }
            set
            {
                this.PlayingTimeCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RunningPlaylistDate
        {
            get
            {
                return this.RunningPlaylistDateField;
            }
            set
            {
                this.RunningPlaylistDateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceSignalType
        {
            get
            {
                return this.SourceSignalTypeField;
            }
            set
            {
                this.SourceSignalTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StartEventTimeTick
        {
            get
            {
                return this.StartEventTimeTickField;
            }
            set
            {
                this.StartEventTimeTickField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HDAutomationService.SystemState State
        {
            get
            {
                return this.StateField;
            }
            set
            {
                this.StateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TapeId
        {
            get
            {
                return this.TapeIdField;
            }
            set
            {
                this.TapeIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ValuePickTick
        {
            get
            {
                return this.ValuePickTickField;
            }
            set
            {
                this.ValuePickTickField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime VersionValue
        {
            get
            {
                return this.VersionValueField;
            }
            set
            {
                this.VersionValueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TimeCode", Namespace="http://schemas.datacontract.org/2004/07/HDCore")]
    public partial struct TimeCode
    {
        
        private byte frameField;
        
        private byte hourField;
        
        private byte minuteField;
        
        private byte secondField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte frame
        {
            get
            {
                return this.frameField;
            }
            set
            {
                this.frameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte hour
        {
            get
            {
                return this.hourField;
            }
            set
            {
                this.hourField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte minute
        {
            get
            {
                return this.minuteField;
            }
            set
            {
                this.minuteField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte second
        {
            get
            {
                return this.secondField;
            }
            set
            {
                this.secondField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemState", Namespace="http://schemas.datacontract.org/2004/07/HDCore")]
    public enum SystemState : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Restoring = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Stop = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Playing = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Recording = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pausing = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SystemHealth", Namespace="http://schemas.datacontract.org/2004/07/HDAutomationLib")]
    public partial class SystemHealth : object
    {
        
        private int ControlCGStatusField;
        
        private int ControlMSCStatusField;
        
        private int ControlServerStatusField;
        
        private bool IsMasterField;
        
        private int PlaylistStatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ControlCGStatus
        {
            get
            {
                return this.ControlCGStatusField;
            }
            set
            {
                this.ControlCGStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ControlMSCStatus
        {
            get
            {
                return this.ControlMSCStatusField;
            }
            set
            {
                this.ControlMSCStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ControlServerStatus
        {
            get
            {
                return this.ControlServerStatusField;
            }
            set
            {
                this.ControlServerStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMaster
        {
            get
            {
                return this.IsMasterField;
            }
            set
            {
                this.IsMasterField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlaylistStatus
        {
            get
            {
                return this.PlaylistStatusField;
            }
            set
            {
                this.PlaylistStatusField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlaylistItemCueState", Namespace="http://schemas.datacontract.org/2004/07/HDAutomationLib")]
    public partial class PlaylistItemCueState : object
    {
        
        private HDAutomationService.CueStateOnServer CueStateField;
        
        private string CueStatusErrorMessageField;
        
        private long PlaylistItemIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public HDAutomationService.CueStateOnServer CueState
        {
            get
            {
                return this.CueStateField;
            }
            set
            {
                this.CueStateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CueStatusErrorMessage
        {
            get
            {
                return this.CueStatusErrorMessageField;
            }
            set
            {
                this.CueStatusErrorMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PlaylistItemId
        {
            get
            {
                return this.PlaylistItemIdField;
            }
            set
            {
                this.PlaylistItemIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CueStateOnServer", Namespace="http://schemas.datacontract.org/2004/07/HDCore")]
    public enum CueStateOnServer : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotCue = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CueOK = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CannotAttachTimeline = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CannotSetInOut = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotExist = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Skip = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IOnAirService")]
    public interface IOnAirService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/Init", ReplyAction="http://tempuri.org/IOnAirService/InitResponse")]
        System.Threading.Tasks.Task<bool> InitAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/Play", ReplyAction="http://tempuri.org/IOnAirService/PlayResponse")]
        System.Threading.Tasks.Task<bool> PlayAsync(long playlistItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/Stop", ReplyAction="http://tempuri.org/IOnAirService/StopResponse")]
        System.Threading.Tasks.Task<bool> StopAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/Pause", ReplyAction="http://tempuri.org/IOnAirService/PauseResponse")]
        System.Threading.Tasks.Task<bool> PauseAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/Continue", ReplyAction="http://tempuri.org/IOnAirService/ContinueResponse")]
        System.Threading.Tasks.Task<bool> ContinueAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/Cue", ReplyAction="http://tempuri.org/IOnAirService/CueResponse")]
        System.Threading.Tasks.Task<bool> CueAsync(long playlistItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/ForceUpdateList", ReplyAction="http://tempuri.org/IOnAirService/ForceUpdateListResponse")]
        System.Threading.Tasks.Task<bool> ForceUpdateListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/SyncServerPlaylist", ReplyAction="http://tempuri.org/IOnAirService/SyncServerPlaylistResponse")]
        System.Threading.Tasks.Task<bool> SyncServerPlaylistAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/GetPlayStatus", ReplyAction="http://tempuri.org/IOnAirService/GetPlayStatusResponse")]
        System.Threading.Tasks.Task<HDAutomationService.PlayingInfo> GetPlayStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/GetSystemHealth", ReplyAction="http://tempuri.org/IOnAirService/GetSystemHealthResponse")]
        System.Threading.Tasks.Task<HDAutomationService.SystemHealth> GetSystemHealthAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/GetStorageId", ReplyAction="http://tempuri.org/IOnAirService/GetStorageIdResponse")]
        System.Threading.Tasks.Task<int> GetStorageIdAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/SelectDB", ReplyAction="http://tempuri.org/IOnAirService/SelectDBResponse")]
        System.Threading.Tasks.Task<bool> SelectDBAsync(int dbId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/SetMainRole", ReplyAction="http://tempuri.org/IOnAirService/SetMainRoleResponse")]
        System.Threading.Tasks.Task<bool> SetMainRoleAsync(bool isMain);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/JumpNext", ReplyAction="http://tempuri.org/IOnAirService/JumpNextResponse")]
        System.Threading.Tasks.Task<bool> JumpNextAsync(long playlistItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/SyncPlayWithMain", ReplyAction="http://tempuri.org/IOnAirService/SyncPlayWithMainResponse")]
        System.Threading.Tasks.Task<bool> SyncPlayWithMainAsync(long playlistItemId, long milisecToPlay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/PlayWithPlayTime", ReplyAction="http://tempuri.org/IOnAirService/PlayWithPlayTimeResponse")]
        System.Threading.Tasks.Task<bool> PlayWithPlayTimeAsync(long playlistId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/StopDelay", ReplyAction="http://tempuri.org/IOnAirService/StopDelayResponse")]
        System.Threading.Tasks.Task StopDelayAsync(long milisecToStop);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/CgOn", ReplyAction="http://tempuri.org/IOnAirService/CgOnResponse")]
        System.Threading.Tasks.Task CgOnAsync(long cgItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/CgOff", ReplyAction="http://tempuri.org/IOnAirService/CgOffResponse")]
        System.Threading.Tasks.Task CgOffAsync(long cgItemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/CgOffAll", ReplyAction="http://tempuri.org/IOnAirService/CgOffAllResponse")]
        System.Threading.Tasks.Task CgOffAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/Shutdown", ReplyAction="http://tempuri.org/IOnAirService/ShutdownResponse")]
        System.Threading.Tasks.Task ShutdownAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOnAirService/GetCueState", ReplyAction="http://tempuri.org/IOnAirService/GetCueStateResponse")]
        System.Threading.Tasks.Task<HDAutomationService.PlaylistItemCueState[]> GetCueStateAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public interface IOnAirServiceChannel : HDAutomationService.IOnAirService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public partial class OnAirServiceClient : System.ServiceModel.ClientBase<HDAutomationService.IOnAirService>, HDAutomationService.IOnAirService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public OnAirServiceClient() : 
                base(OnAirServiceClient.GetDefaultBinding(), OnAirServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IOnAirService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OnAirServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(OnAirServiceClient.GetBindingForEndpoint(endpointConfiguration), OnAirServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OnAirServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(OnAirServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OnAirServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(OnAirServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OnAirServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<bool> InitAsync()
        {
            return base.Channel.InitAsync();
        }
        
        public System.Threading.Tasks.Task<bool> PlayAsync(long playlistItemId)
        {
            return base.Channel.PlayAsync(playlistItemId);
        }
        
        public System.Threading.Tasks.Task<bool> StopAsync()
        {
            return base.Channel.StopAsync();
        }
        
        public System.Threading.Tasks.Task<bool> PauseAsync()
        {
            return base.Channel.PauseAsync();
        }
        
        public System.Threading.Tasks.Task<bool> ContinueAsync()
        {
            return base.Channel.ContinueAsync();
        }
        
        public System.Threading.Tasks.Task<bool> CueAsync(long playlistItemId)
        {
            return base.Channel.CueAsync(playlistItemId);
        }
        
        public System.Threading.Tasks.Task<bool> ForceUpdateListAsync()
        {
            return base.Channel.ForceUpdateListAsync();
        }
        
        public System.Threading.Tasks.Task<bool> SyncServerPlaylistAsync()
        {
            return base.Channel.SyncServerPlaylistAsync();
        }
        
        public System.Threading.Tasks.Task<HDAutomationService.PlayingInfo> GetPlayStatusAsync()
        {
            return base.Channel.GetPlayStatusAsync();
        }
        
        public System.Threading.Tasks.Task<HDAutomationService.SystemHealth> GetSystemHealthAsync()
        {
            return base.Channel.GetSystemHealthAsync();
        }
        
        public System.Threading.Tasks.Task<int> GetStorageIdAsync()
        {
            return base.Channel.GetStorageIdAsync();
        }
        
        public System.Threading.Tasks.Task<bool> SelectDBAsync(int dbId)
        {
            return base.Channel.SelectDBAsync(dbId);
        }
        
        public System.Threading.Tasks.Task<bool> SetMainRoleAsync(bool isMain)
        {
            return base.Channel.SetMainRoleAsync(isMain);
        }
        
        public System.Threading.Tasks.Task<bool> JumpNextAsync(long playlistItemId)
        {
            return base.Channel.JumpNextAsync(playlistItemId);
        }
        
        public System.Threading.Tasks.Task<bool> SyncPlayWithMainAsync(long playlistItemId, long milisecToPlay)
        {
            return base.Channel.SyncPlayWithMainAsync(playlistItemId, milisecToPlay);
        }
        
        public System.Threading.Tasks.Task<bool> PlayWithPlayTimeAsync(long playlistId)
        {
            return base.Channel.PlayWithPlayTimeAsync(playlistId);
        }
        
        public System.Threading.Tasks.Task StopDelayAsync(long milisecToStop)
        {
            return base.Channel.StopDelayAsync(milisecToStop);
        }
        
        public System.Threading.Tasks.Task CgOnAsync(long cgItemId)
        {
            return base.Channel.CgOnAsync(cgItemId);
        }
        
        public System.Threading.Tasks.Task CgOffAsync(long cgItemId)
        {
            return base.Channel.CgOffAsync(cgItemId);
        }
        
        public System.Threading.Tasks.Task CgOffAllAsync()
        {
            return base.Channel.CgOffAllAsync();
        }
        
        public System.Threading.Tasks.Task ShutdownAsync()
        {
            return base.Channel.ShutdownAsync();
        }
        
        public System.Threading.Tasks.Task<HDAutomationService.PlaylistItemCueState[]> GetCueStateAsync()
        {
            return base.Channel.GetCueStateAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IOnAirService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IOnAirService))
            {
                return new System.ServiceModel.EndpointAddress("http://10.10.10.114:8733/Design_Time_Addresses/HDAutomationService/Service1/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return OnAirServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IOnAirService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return OnAirServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IOnAirService);
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IOnAirService,
        }
    }
}
