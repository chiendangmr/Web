@model HDAutomation.Models.PlayListItem

@{
    ViewData["Title"] = "Delete";
}

<h2>Delete</h2>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>PlayListItem</h4>
    <hr />
    <dl class="dl-horizontal">
        <input type="hidden" asp-for="Id" />
        <dt>
            @Html.DisplayNameFor(model => model.ListId)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ListId)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Idclip)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Idclip)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.IdclipSubstitute)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.IdclipSubstitute)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.OrderClip)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OrderClip)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PlayTcIn)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.PlayTcIn)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PlayTcOut)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.PlayTcOut)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Command)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Command)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Command1)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Command1)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Note)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Note)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Setting)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Setting)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.StartTime)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.StartTime)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ColorDisplay)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ColorDisplay)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Status)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RouterInput)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.RouterInput)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CommandAtEnd)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.CommandAtEnd)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.StandbyPlaylistId)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.StandbyPlaylistId)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.MasterPlaylistItemId)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.MasterPlaylistItemId)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.VtrId)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.VtrId)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Changed)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Changed)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ClusterId)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ClusterId)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.PlayTime)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.PlayTime)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.EventType)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.EventType)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Approved)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Approved)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RealPlayTcIn)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.RealPlayTcIn)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RealPlayTcOut)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.RealPlayTcOut)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.SyncId)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.SyncId)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RowColor)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.RowColor)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ProgramNote)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ProgramNote)
        </dd>
    </dl>
    
    <form asp-action="Delete">
        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-default" /> |
            <a asp-action="Index">Back to List</a>
        </div>
    </form>
</div>
